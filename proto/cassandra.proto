syntax = "proto3";

package cassandragrpc;

option go_package = "/api";

service CassandraService {
  
  rpc Read (ReadRequest) returns (ReadResponse) {}
  rpc Write (WriteRequest) returns (WriteResponse) {}
}

//sent by client to node (coordinator)
// also sent from node (coordinator) to nodes
message ReadRequest {
  string date = 1;
  string pageId = 2;
  repeated string columns = 3;       
  string name = 4; //name of node or client which sent request
  string nodeType = 5;
}

//sent by node to client
//and also other nodes to coordinator nodes
message ReadResponse {
  string date = 1;
  string pageId = 2;          
  repeated string columns = 3;       
  repeated RowData rows = 4;      
  string name = 5; //name of node which replied
  string nodeType = 6;
}

// Represents a row of key-value data, simulating a map structure
message RowData {
  map<string, string> data = 1;  // Key-value pairs for each row
}

//sent by client to node (coordinator)
// also sent from node (coordinator) to nodes
message WriteRequest {
  string date = 1;
  string pageId = 2;
  string event = 3;
  string componentId = 4;
  string name = 5;
  string nodeType = 6;        
}

//sent by node to client
//and also other nodes to coordinator nodes
message WriteResponse {
  bool ack = 1;
  string name = 2;
  string nodeType = 3;                      
}